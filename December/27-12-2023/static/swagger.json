{
  "swagger": "2.0",
  
  "info": {
    "description":"Ritvik",
    "title": "Employee API",
    "version": "1.0.0",
    "contact":{
      "email":"dummy@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },

  
  "definitions": {
    "schemas": {
      "id": {
        "properties": {
          "uempid": {
            "type": "string"
          }
        }
      },
      "AccessData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "salary": {
            "type": "string"
          }
        }
      }

  }
},
  "paths": {
      "/getemployee": {
        "get": {
          "summary": "Get employee data",
          "description": "Returns Employee information from DB",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            }
          }
        }
      },
      
      "/postemployee": {
        "post": {
          "summary": "Post employee data",
          "description": "Post data into the database",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "access data",
              "in": "body",
              "description": "JSON data for the api",
              "required": true,
              "schema": {
                "$ref": "#/definitions/schemas/AccessData"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User granted access"
            },
            "400": {
              "description": "Invalid request data"
            }
          }
        }
      },

      "/employee/{id}": {
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the cat that we want to match",
            "type": "string"
          }
        ],

        "get": {
          "summary": "Get employee request with given ID",
          "tags": [
            "Request with ID"
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Employee request not found."
            }
          }
        },

        "delete": {
          "summary": "Delete Employee by ID",
          "tags": [
            "Request with ID"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "description": "Employee Request Id",
              "schema": {
                "$ref": "#/definitions/schemas/id"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "OK"
            },
            "400": {
              "description": "Failed. Misunderstood Request."
            },
            "404": {
              "description": "Failed. Book Request not found."
            }
          }
        }

      },
      
      "/putemployee/{id}":{ 
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the cat that we want to match",
            "type": "string"
          }
        ],         
        "put": {
        "summary": "edit a employee request by ID",
        "tags": [
          "Request with ID"
        ],

        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access data",
            "in": "body",
            "description": "JSON data for the api",
            "required": true,
            "schema": {
              "$ref": "#/definitions/schemas/AccessData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
        }
      } 
  }
}


